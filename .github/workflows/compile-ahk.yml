name: Compile AutoHotkey Scripts

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  compile:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Get AutoHotkey versions
      id: get-versions
      shell: pwsh
      run: |
        # Get latest v1.1.x release
        $v1Releases = Invoke-RestMethod -Uri "https://api.github.com/repos/AutoHotkey/AutoHotkey/releases" -Headers @{ "User-Agent" = "PowerShell" }
        $v1Release = $v1Releases | Where-Object { $_.tag_name -match "^v1\.1\." } | Select-Object -First 1
        
        # Get latest v2.x release (stable only)
        $v2Release = $v1Releases | Where-Object { $_.tag_name -match "^v2\." -and -not $_.prerelease } | Select-Object -First 1
        
        $v1Version = $v1Release.tag_name
        $v2Version = $v2Release.tag_name
        
        Write-Host "Latest v1.1.x version: $v1Version"
        Write-Host "Latest v2.x version: $v2Version"
        
        # Set outputs for caching
        echo "v1-version=$v1Version" >> $env:GITHUB_OUTPUT
        echo "v2-version=$v2Version" >> $env:GITHUB_OUTPUT
    
    - name: Cache AutoHotkey v1.1 installer
      id: cache-ahk-v1
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/ahk-installers/v1
        key: ahk-v1-installer-${{ steps.get-versions.outputs.v1-version }}
        restore-keys: |
          ahk-v1-installer-
    
    - name: Cache AutoHotkey v2.0 installer
      id: cache-ahk-v2
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/ahk-installers/v2
        key: ahk-v2-installer-${{ steps.get-versions.outputs.v2-version }}
        restore-keys: |
          ahk-v2-installer-
    
    - name: Download and install AutoHotkey v1.1
      shell: pwsh
      run: .\.github\scripts\install-ahk.ps1 -Version "v1"
    
    - name: Download and install AutoHotkey v2.0
      shell: pwsh
      run: .\.github\scripts\install-ahk.ps1 -Version "v2"
    
    - name: Create output directories
      shell: pwsh
      run: |
        # Create base output directory structure
        $dirs = @("compiled/v1/x86", "compiled/v1/x64", "compiled/v2/x86", "compiled/v2/x64")
        foreach ($dir in $dirs) { New-Item -ItemType Directory -Force -Path $dir | Out-Null; echo "Created directory: $dir" }
    
    - name: Install PowerShell-Yaml module
      shell: pwsh
      run: |
        echo "Installing PowerShell-Yaml module..."
        Install-Module -Name powershell-yaml -Force -Scope CurrentUser
    
    - name: Parse YAML configuration and compile
      shell: pwsh
      run: .\.github\scripts\compile-scripts.ps1
    
    - name: List compiled files
      shell: pwsh
      run: .\.github\scripts\list-compiled-files.ps1
    
    - name: Upload v1 x86 executables
      uses: actions/upload-artifact@v4
      if: env.SUCCESS_COUNT > 0
      with:
        name: ahk-v1-x86-executables
        path: compiled/v1/x86/
        retention-days: 30
    
    - name: Upload v1 x64 executables
      uses: actions/upload-artifact@v4
      if: env.SUCCESS_COUNT > 0
      with:
        name: ahk-v1-x64-executables
        path: compiled/v1/x64/
        retention-days: 30
    
    - name: Upload v2 x86 executables
      uses: actions/upload-artifact@v4
      if: env.SUCCESS_COUNT > 0
      with:
        name: ahk-v2-x86-executables
        path: compiled/v2/x86/
        retention-days: 30
    
    - name: Upload v2 x64 executables
      uses: actions/upload-artifact@v4
      if: env.SUCCESS_COUNT > 0
      with:
        name: ahk-v2-x64-executables
        path: compiled/v2/x64/
        retention-days: 30
    
    - name: Upload all executables (combined)
      uses: actions/upload-artifact@v4
      if: env.SUCCESS_COUNT > 0
      with:
        name: all-compiled-executables
        path: compiled/
        retention-days: 30
    
    - name: Create release (on tags)
      if: startsWith(github.ref, 'refs/tags/') && env.SUCCESS_COUNT > 0
      uses: softprops/action-gh-release@v1
      with:
        files: compiled/**/*.exe
        draft: false
        prerelease: false
        body: |
          ## AutoHotkey Compiled Executables
          
          This release contains compiled executables for AutoHotkey scripts in both v1 and v2 formats, with 32-bit and 64-bit versions.
          
          ### Directory Structure:
          - `v1/x86/` - AutoHotkey v1.1 32-bit executables
          - `v1/x64/` - AutoHotkey v1.1 64-bit executables  
          - `v2/x86/` - AutoHotkey v2.0 32-bit executables
          - `v2/x64/` - AutoHotkey v2.0 64-bit executables
          
          ### Usage:
          - Download the appropriate version for your system
          - Files ending with `_x86.exe` are 32-bit versions
          - Files ending with `_x64.exe` are 64-bit versions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}